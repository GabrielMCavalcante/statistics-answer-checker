{"version":3,"sources":["components/Data/index.tsx","components/UI/Button/index.tsx","containers/Home/GeneratedData/index.ts","containers/Home/index.tsx","components/Option/index.tsx","components/ResultOption/index.tsx","containers/ResultOptions/index.tsx","utils/ValueFormatter.ts","components/MainTableRow/index.tsx","containers/MainTableRows/index.tsx","containers/MainTable/index.tsx","components/DataSetTableRow/index.tsx","containers/DataSetTableRows/index.tsx","containers/DataSetTable/index.tsx","components/FrequencyTableRow/index.tsx","containers/FrequencyTableRows/index.tsx","containers/FrequencyTable/index.tsx","components/ExtraInfoTableRow/index.tsx","containers/ExtraInfoTableRows/index.tsx","containers/ExtraInfoTable/index.tsx","containers/Results/index.tsx","containers/App.tsx","index.tsx"],"names":["Data","className","required","placeholder","Button","props","onClick","onclick","children","Format","a","b","c","parseFloat","toFixed","table","unique_values","sturges_k","class_interval","intervals","medium_value","interval_freq","accumulated_freq","absolute_freq","total_values","relative_freq","accumulated_relative_freq","total_amplitude","amostral_amplitude","variance","standard_deviation","variation_coefficient","lines","columns","average","fashion","median","this","Set","build_table","create_rol","get_median","get_abs_freq","get_average","get_variance","get_standard_deviation","get_variation_coefficient","get_table_scale","get_sturges_k","get_class_interval","get_intervals","get_class_medium_point","get_interval_freq","get_relative_freq","get_accumulated_freq","get_accumulated_relative_freq","totalSum","forEach","value","String","copyTable","length","splice","pop","sum","Math","pow","sqrt","divisors","total","i","push","removeFirstLastValue","setLinesColumns","index1","index2","sort","maxValue","_","count","bySturges","log10","bySqrt","result","round","val_interval","reduce","interval","f_count","formatComparison","formatEquality","filter","t","console","log","freq","Home","dataValues","document","getElementsByTagName","formattedData","GeneratedData","values","results","Papa","parse","data","parsedRes","parsedTable","allValues","indexOf","index","parseValues","generatedInfo","Array","from","sessionStorage","setItem","JSON","stringify","history","Option","title","content","returnToMenu","ResultOption","classes","selected","join","selectOpt","label","ResultOptions","useState","path","BASE_PATH","options","setOptions","useEffect","currentPath","location","pathname","charAt","updatedOptions","map","option","key","formatValue","toString","padStart","MainTableRow","rowData","parsedInterval","parsedXi","xi","parsedFi","fi","parsedFr","fr","parsedFac","fac","parsedFacr","facr","rowLabels","class","random","MainTableRows","totClasses","info","rows","row","MainTable","DataSetTableRow","DataSetTableRows","td","v","d","DataSetTable","FrequencyTableRow","parsedValue","parsedFreq","FrequencyTableRows","FrequencyTable","ExtraInfoTableRow","arr","ExtraInfoTableRows","formatLabel","capitalizedLabel","toLocaleUpperCase","slice","parsedLabel","split","char","Object","keys","ExtraInfoTable","Results","setInfo","optionsConfig","setOptionsConfig","goBack","useCallback","removeItem","getItem","mainTableInfo","dataSetTableInfo","frequencyTableInfo","extraInfoTableInfo","initOptions","render","to","App","exact","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6902da5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\nfunction Data() {\r\n\r\n    return (\r\n        <div className=\"Data\">\r\n            <textarea required placeholder=\"Type or paste data here...\"></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Data","import React from 'react'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\nfunction Button(props: any) {\r\n    return (\r\n        <button className=\"Button\" onClick={props.onclick}>{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default Button","class Format {\r\n    static formatComparison(a: number, b: number, c: number) {\r\n        return (\r\n            (parseFloat(a.toFixed(2)) <= parseFloat(b.toFixed(2)))\r\n            &&\r\n            (parseFloat(b.toFixed(2)) < parseFloat(c.toFixed(2)))\r\n        );\r\n    }\r\n\r\n    static formatEquality(a: number, b: number) {\r\n        return (a.toFixed(2) === b.toFixed(2));\r\n    }\r\n}\r\n\r\nexport default class {\r\n    table: number[]\r\n    unique_values: Set<number>\r\n    sturges_k: number\r\n    class_interval: number\r\n    intervals: number[][]\r\n    medium_value: number[]\r\n    interval_freq: number[]\r\n    accumulated_freq: number[]\r\n    absolute_freq: number[]\r\n    total_values: number\r\n    relative_freq: number[]\r\n    accumulated_relative_freq: number[]\r\n    total_amplitude: number\r\n    amostral_amplitude: number\r\n    variance: number\r\n    standard_deviation: number\r\n    variation_coefficient: number\r\n    lines: number\r\n    columns: number\r\n    average: number\r\n    fashion: number[]\r\n    median: number\r\n\r\n    constructor(table: number[]) {\r\n        this.table = table\r\n        this.unique_values = new Set()\r\n        this.sturges_k = 0\r\n        this.class_interval = 0\r\n        this.intervals = []\r\n        this.medium_value = []\r\n        this.interval_freq = []\r\n        this.accumulated_freq = []\r\n        this.absolute_freq = []\r\n        this.total_values = 0\r\n        this.relative_freq = []\r\n        this.accumulated_relative_freq = []\r\n        this.total_amplitude = 0\r\n        this.amostral_amplitude = 0\r\n        this.variance = 0\r\n        this.standard_deviation = 0\r\n        this.variation_coefficient = 0\r\n        this.lines = 0\r\n        this.columns = 0\r\n        this.average = 0\r\n        this.fashion = []\r\n        this.median = 0\r\n        this.build_table()\r\n    }\r\n\r\n    private build_table() {\r\n        this.create_rol()\r\n        this.get_median()\r\n        this.get_abs_freq()\r\n        this.get_average()\r\n        this.get_variance()\r\n        this.get_standard_deviation()\r\n        this.get_variation_coefficient()\r\n        this.get_table_scale()\r\n        this.get_sturges_k()\r\n        this.get_class_interval()\r\n        this.get_intervals()\r\n        this.get_class_medium_point()\r\n        this.get_interval_freq()\r\n        this.get_relative_freq()\r\n        this.get_accumulated_freq()\r\n        this.get_accumulated_relative_freq()\r\n    }\r\n\r\n    private get_average() {\r\n        let totalSum = 0\r\n        this.table.forEach(value => {\r\n            totalSum += value\r\n        })\r\n        this.average = parseFloat(String((totalSum / this.total_values)))\r\n    }\r\n\r\n    private get_median() {\r\n        const copyTable = [...this.table]\r\n\r\n        while (copyTable.length > 2) {\r\n            copyTable.splice(0, 1)\r\n            copyTable.pop()\r\n        }\r\n        if (copyTable.length === 2)\r\n            this.median = parseFloat(String(((copyTable[0] + copyTable[1]) / 2)))\r\n        else this.median = parseFloat(String(copyTable[0]))\r\n\r\n    }\r\n\r\n    private get_variance() {\r\n        let sum = 0\r\n        this.table.forEach(value => {\r\n            sum += Math.pow((value - this.average), 2)\r\n        })\r\n        this.variance = parseFloat(String(sum / (this.total_values)))\r\n    }\r\n\r\n    private get_standard_deviation() {\r\n        this.standard_deviation = parseFloat(\r\n            String(Math.sqrt(parseFloat(this.variance.toFixed(2))))\r\n        )\r\n    }\r\n\r\n    private get_variation_coefficient() {\r\n        this.variation_coefficient = parseFloat(\r\n            String(100 * (this.standard_deviation / this.average))\r\n        )\r\n    }\r\n\r\n    private get_table_scale() {\r\n        let lines = 0\r\n        let columns = 0\r\n\r\n        let divisors: number[] = []\r\n        let total = this.total_values\r\n        while (true) {\r\n            for (let i = 1; i < total + 1; i++) {\r\n                if (total % i === 0) divisors.push(i)\r\n            }\r\n            if (divisors.length > 2) break\r\n            else {\r\n                total++\r\n                divisors = []\r\n            }\r\n        }\r\n        function removeFirstLastValue() {\r\n            divisors.splice(0, 1)\r\n            divisors.pop()\r\n        }\r\n\r\n        function setLinesColumns(index1: number, index2: number) {\r\n            lines = divisors[index1]\r\n            columns = divisors[index2]\r\n        }\r\n\r\n        while (true) {\r\n            if (divisors.length > 4) removeFirstLastValue()\r\n            else if (divisors.length === 4) {\r\n                removeFirstLastValue()\r\n                setLinesColumns(0, 1)\r\n                break\r\n            }\r\n            else if (divisors.length < 4) {\r\n                removeFirstLastValue()\r\n                setLinesColumns(0, 0)\r\n                break\r\n            }\r\n        }\r\n        this.lines = lines\r\n        this.columns = columns\r\n    }\r\n\r\n    private create_rol() {\r\n        this.table.sort((a, b) => { return a - b })\r\n    }\r\n\r\n    private get_abs_freq() {\r\n        this.unique_values = new Set(this.table)\r\n        let total = 0\r\n        let maxValue = 0\r\n        this.unique_values.forEach((_, value) => {\r\n            let count = 0\r\n            for (const this_value of this.table) {\r\n                if (this_value === value) count += 1\r\n            }\r\n            if (total === 0) {\r\n                maxValue = count\r\n                this.fashion.push(value)\r\n            }\r\n            else {\r\n                if (count > maxValue) {\r\n                    maxValue = count\r\n                    this.fashion = []\r\n                    this.fashion.push(value)\r\n                }\r\n                else if (count === maxValue) this.fashion.push(value)\r\n            }\r\n            this.absolute_freq.push(count)\r\n            total += count\r\n        })\r\n\r\n        this.total_values = total\r\n    }\r\n\r\n    private get_sturges_k() {\r\n        const bySturges = 1 + 3.3 * Math.log10(this.total_values)\r\n        const bySqrt = Math.sqrt(this.total_values)\r\n\r\n        const result = bySturges < bySqrt ? Math.round(bySturges) : Math.round(bySqrt)\r\n\r\n        this.sturges_k = result % 2 === 0 ? result : result - 1\r\n\r\n        if (this.sturges_k <= 4) this.sturges_k = 5\r\n    }\r\n\r\n    private get_class_interval() {\r\n        this.amostral_amplitude = this.table[this.table.length - 1] - this.table[0]\r\n\r\n        this.class_interval = parseFloat(String(this.amostral_amplitude / this.sturges_k))\r\n    }\r\n\r\n    private get_intervals() {\r\n        let val_interval = this.table[0]\r\n        for (let i = 0; i < this.sturges_k; i++) {\r\n            this.intervals.push([val_interval, val_interval + this.class_interval])\r\n            val_interval += this.class_interval\r\n        }\r\n        this.total_amplitude = this.intervals[this.sturges_k - 1][1] - this.intervals[0][0]\r\n    }\r\n\r\n    private get_class_medium_point() {\r\n        for (const interval of this.intervals) {\r\n            const sum = interval.reduce((a, b) => { return a + b }, 0)\r\n            this.medium_value.push(parseFloat(String(sum / 2)))\r\n        }\r\n    }\r\n\r\n    private get_interval_freq() {\r\n        for (let interval of this.intervals) {\r\n            let f_count = 0\r\n            for (const value of this.table) {\r\n                if (Format.formatComparison(interval[0], value, interval[1]))\r\n                    f_count++\r\n            }\r\n\r\n            if (Format.formatEquality(interval[1], this.table[this.total_values - 1])) {\r\n                const total = this.table.filter(t => parseFloat(t.toFixed(2)) === parseFloat(interval[1].toFixed(2)))\r\n                f_count += total.length\r\n            }\r\n\r\n            this.interval_freq.push(f_count)\r\n        }\r\n    }\r\n\r\n    private get_relative_freq() {\r\n        for (const freq of this.interval_freq) {\r\n            const value = freq / this.total_values\r\n            this.relative_freq.push((100 * parseFloat(String(value))))\r\n        }\r\n    }\r\n\r\n    private get_accumulated_freq() {\r\n        let f_count = 0\r\n        for (const interval of this.intervals) {\r\n            for (const value of this.table) {\r\n                if (Format.formatComparison(interval[0], value, interval[1]))\r\n                    f_count++\r\n            }\r\n\r\n            if (Format.formatEquality(interval[1], this.table[this.total_values - 1])) {\r\n                const total = this.table.filter(t => parseFloat(t.toFixed(2)) === parseFloat(interval[1].toFixed(2)))\r\n                f_count += total.length\r\n            }\r\n\r\n            this.accumulated_freq.push(f_count)\r\n        }\r\n    }\r\n\r\n    private get_accumulated_relative_freq() {\r\n        console.log(this.accumulated_freq)\r\n        for (const freq of this.accumulated_freq)\r\n            this.accumulated_relative_freq.push((100 * parseFloat(String(freq / this.total_values))))\r\n    }\r\n}","import React from 'react'\r\nimport Papa from 'papaparse'\r\n\r\n// Containers\r\nimport Data from 'components/Data'\r\n\r\n// Components\r\nimport Button from 'components/UI/Button'\r\n\r\n// Classes\r\nimport GeneratedData from './GeneratedData'\r\n\r\nfunction Home(props: any) {\r\n\r\n    function parseValues(values: string) {\r\n\r\n        const results: string[] = Papa.parse(values).data as unknown[] as string[]\r\n        let parsedRes: any = [[]]\r\n        if(results.length > 1) {\r\n            results.forEach(result => {\r\n                parsedRes[0].push(result[0])\r\n            })\r\n        } else parsedRes = results\r\n\r\n        let parsedTable = []\r\n        for (let i = 0; i < parsedRes.length; i++) {\r\n            if (parsedRes[i].length > 1) parsedTable.push(parsedRes[i])\r\n        }\r\n\r\n        let allValues = []\r\n        for (let i = 0; i < parsedTable.length; i++) {\r\n            allValues.push(...parsedTable[i])\r\n        }\r\n\r\n        while (allValues.indexOf(\"\") !== -1) {\r\n            allValues.splice(allValues.indexOf(\"\"), 1)\r\n        }\r\n\r\n        allValues.forEach((value, index) => {\r\n            allValues[index] = parseFloat(value)\r\n        });\r\n\r\n        return allValues\r\n    }\r\n\r\n    function createTable() {\r\n        const dataEl = document.getElementsByTagName('textarea')[0]\r\n        const dataValues = dataEl.value\r\n        const formattedData = new GeneratedData(parseValues(dataValues))\r\n\r\n        const generatedInfo = {\r\n            table: formattedData.table,\r\n            unique_values: Array.from(formattedData.unique_values),\r\n            sturges_k: formattedData.sturges_k,\r\n            class_interval: formattedData.class_interval,\r\n            intervals: formattedData.intervals,\r\n            medium_value: formattedData.medium_value,\r\n            interval_freq: formattedData.interval_freq,\r\n            accumulated_freq: formattedData.accumulated_freq,\r\n            absolute_freq: formattedData.absolute_freq,\r\n            relative_freq: formattedData.relative_freq,\r\n            accumulated_relative_freq: formattedData.accumulated_relative_freq,\r\n            total_amplitude: formattedData.total_amplitude,\r\n            amostral_amplitude: formattedData.amostral_amplitude,\r\n            lines: formattedData.lines,\r\n            columns: formattedData.columns,\r\n            total_values: formattedData.total_values,\r\n            average: formattedData.average,\r\n            median: formattedData.median,\r\n            fashion: formattedData.fashion,\r\n            variance: formattedData.variance,\r\n            standard_deviation: formattedData.standard_deviation,\r\n            variation_coefficient: formattedData.variation_coefficient\r\n        }\r\n\r\n        sessionStorage.setItem('generatedInfo', JSON.stringify(generatedInfo))\r\n        props.history.push('/results/1')\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <header>\r\n                <h1>Statistics Answer Checker</h1>\r\n                <h3>\r\n                    Study basic statistics without\r\n                    losing time checking answers manually\r\n                </h3>\r\n            </header>\r\n\r\n            <div className=\"UserData\">\r\n                <h3>Copy and paste your data on the field below</h3>\r\n                <Data />\r\n                <Button onclick={createTable}>Create Table</Button>\r\n                <p>The data has to be separated by commas</p>\r\n                <p>For decimal values, use a dot (.)</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\n// Components\r\nimport Button from 'components/UI/Button'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\nfunction Option(props: { title: string, content: JSX.Element, returnToMenu: Function }) {\r\n    return (\r\n        <div className=\"Option\">\r\n            <header>\r\n                <h1>{ props.title }</h1>\r\n            </header>\r\n            <div className=\"TableArea\">\r\n                { props.content }\r\n            </div>\r\n            <Button onclick={props.returnToMenu}>Return to menu</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Option","import React from 'react'\r\n\r\nimport './styles.css'\r\n\r\nfunction ResultOption(props: { label: number, selected: boolean, selectOpt: Function}) {\r\n    \r\n    const classes = [\"ResultOption\"]\r\n    if(props.selected) classes.push(\"Selected\")\r\n    \r\n    return (\r\n        <div className={classes.join(' ')} onClick={() => props.selectOpt()}>\r\n            <span>{ props.label }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultOption","import React, { useState, useEffect } from 'react'\r\n\r\n// Components\r\nimport ResultOption from 'components/ResultOption'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\nconst BASE_PATH = '/results/'\r\n\r\nfunction ResultOptions(props: any) {\r\n\r\n    const [options, setOptions] = useState([\r\n        { label: 1, selected: true,  path: BASE_PATH + '1' },\r\n        { label: 2, selected: false, path: BASE_PATH + '2' },\r\n        { label: 3, selected: false, path: BASE_PATH + '3' },\r\n        { label: 4, selected: false, path: BASE_PATH + '4' },\r\n    ])\r\n\r\n    function selectOptHandler(label: number) {\r\n        props.history.push(BASE_PATH + label)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const currentPath: string = props.history.location.pathname\r\n        const label = +currentPath.charAt(currentPath.length - 1)\r\n        const updatedOptions = options.map(option => {\r\n            if (option.label !== label) return { ...option, selected: false }\r\n            else return { ...option, selected: true }\r\n        })\r\n\r\n        setOptions(updatedOptions)\r\n    }, [props.history.location.pathname]) // eslint-disable-line\r\n\r\n    return (\r\n        <div className=\"ResultOptions\">\r\n            {\r\n                options.map(option => (\r\n                    <ResultOption\r\n                        label={option.label}\r\n                        selected={option.selected}\r\n                        selectOpt={() => selectOptHandler(option.label)}\r\n                        key={option.label}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultOptions","export function formatValue(value: number) {\r\n    value = parseFloat(parseFloat(String(value)).toFixed(2))\r\n    if (value % 1 === 0) return value.toString().padStart(2, '0')\r\n    else return value.toFixed(2)\r\n}","import React from 'react'\r\n\r\nimport { formatValue } from 'utils/ValueFormatter'\r\n\r\ninterface RowData {\r\n    class: number,\r\n    interval: number[],\r\n    xi: number,\r\n    fi: number,\r\n    fr: number,\r\n    fac: number,\r\n    facr: number\r\n}\r\n\r\nfunction MainTableRow(rowData: RowData) {\r\n\r\n    const parsedInterval =\r\n        formatValue(rowData.interval[0]) + ' |- ' + formatValue(rowData.interval[1])\r\n\r\n    const parsedXi = formatValue(rowData.xi)\r\n    const parsedFi = formatValue(rowData.fi)\r\n    const parsedFr = formatValue(rowData.fr) + '%'\r\n    const parsedFac = formatValue(rowData.fac)\r\n    const parsedFacr = formatValue(rowData.facr) + '%'\r\n\r\n    const rowLabels = [\r\n        rowData.class,\r\n        parsedInterval,\r\n        parsedXi,\r\n        parsedFi,\r\n        parsedFr,\r\n        parsedFac,\r\n        parsedFacr\r\n    ]\r\n\r\n    return (\r\n        <tr className=\"MainTableRow\">\r\n            {\r\n                rowLabels.map(label => (\r\n                    <td key={Math.random()}>{label}</td>\r\n                ))\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default MainTableRow","import React from 'react'\r\n\r\n// Components\r\nimport MainTableRow from 'components/MainTableRow'\r\n\r\ntype Info = {\r\n    classes: number,\r\n    interval: number[][],\r\n    xi: number[],\r\n    fi: number[],\r\n    fr: number[],\r\n    fac: number[],\r\n    facr: number[]\r\n}\r\n\r\ntype RowData = {\r\n    class: number,\r\n    interval: number[],\r\n    xi: number,\r\n    fi: number,\r\n    fr: number,\r\n    fac: number,\r\n    facr: number\r\n}\r\n\r\nfunction MainTableRows(props: { info: Info }) {\r\n    const totClasses: number[] = []\r\n\r\n    for (let i = 1; i <= props.info.classes; i++)\r\n        totClasses.push(i)\r\n\r\n    const rows: RowData[] = []\r\n\r\n    for (let row = 0; row < props.info.classes; row++) {\r\n        rows.push({ \r\n            class: totClasses[row], \r\n            interval: props.info.interval[row], \r\n            xi: props.info.xi[row], \r\n            fi: props.info.fi[row], \r\n            fr: props.info.fr[row], \r\n            fac: props.info.fac[row], \r\n            facr: props.info.facr[row]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                rows.map(row => (\r\n                    <MainTableRow key={rows.indexOf(row)} {...row} />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainTableRows","import React from 'react'\r\n\r\nimport MainTableRows from 'containers/MainTableRows'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\ntype Info = {\r\n    classes: number,\r\n    interval: number[][],\r\n    xi: number[],\r\n    fi: number[],\r\n    fr: number[],\r\n    fac: number[],\r\n    facr: number[]\r\n}\r\n\r\nfunction MainTable(props: { info: Info }) {\r\n    return (\r\n        <table className=\"MainTable\">\r\n            <tbody>\r\n                <tr className=\"Header\">\r\n                    <th>Classes</th>\r\n                    <th>Data</th>\r\n                    <th>Xi</th>\r\n                    <th>Fi</th>\r\n                    <th>Fr</th>\r\n                    <th>Fac</th>\r\n                    <th>Facr</th>\r\n                </tr>\r\n                <MainTableRows info={props.info}/>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default MainTable","import React from 'react'\r\n\r\nfunction DataSetTableRow(props: {data: JSX.Element[]}) {\r\n    return <tr>{ props.data }</tr>\r\n}\r\n\r\nexport default DataSetTableRow","import React from 'react'\r\n\r\n// Components\r\nimport DataSetTableRow from 'components/DataSetTableRow'\r\n\r\ntype RowData = {\r\n    table: number[],\r\n    lines: number,\r\n    columns: number\r\n}\r\n\r\nfunction DataSetTableRows(props: {info: RowData}) {\r\n    const table = props.info.table\r\n    const lines = props.info.lines\r\n    const columns = props.info.columns\r\n    const rows: JSX.Element[] = []\r\n\r\n    for (let row = 0; row < lines; row++) {\r\n        let td = []\r\n        let v = row\r\n        for (let d = 0; d < columns; d++) {\r\n            td.push(<td key={d}>{table[v] ? String(table[v]).padStart(2, '0') : '-'}</td>)\r\n            v += lines\r\n        }\r\n        rows.push((\r\n            <DataSetTableRow key={row} data={td} />\r\n        ))\r\n    }\r\n\r\n    return <>{rows}</>\r\n}\r\n\r\nexport default DataSetTableRows","import React from 'react'\r\n\r\n// Containers\r\nimport DataSetTableRows from 'containers/DataSetTableRows'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\ntype Info = {\r\n    table: number[],\r\n    lines: number,\r\n    columns: number\r\n}\r\n\r\nfunction DataSetTable(props: { info: Info }) {\r\n    return (\r\n        <table className=\"DataSetTable\">\r\n            <tbody>\r\n                <DataSetTableRows info={props.info}/>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default DataSetTable","import React from 'react'\r\n\r\nfunction FrequencyTableRow(props: { freq: number, value: number }) {\r\n    \r\n    const parsedValue = String(props.value).padStart(2, '0')\r\n    const parsedFreq = String(props.freq).padStart(2, '0')\r\n\r\n    return (\r\n        <tr>\r\n            <td>{ parsedValue }</td>\r\n            <td>{ parsedFreq }</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default FrequencyTableRow","import React from 'react'\r\n\r\n// Components\r\nimport FrequencyTableRow from 'components/FrequencyTableRow'\r\n\r\ntype RowData = {\r\n    absolute_freq: number[],\r\n    unique_values: number[]\r\n}\r\n\r\nfunction FrequencyTableRows(props: { info: RowData }) {\r\n    const absolute_freq = props.info.absolute_freq\r\n    const unique_values = props.info.unique_values\r\n\r\n    const rows: JSX.Element[] = []\r\n\r\n    for (let i = 0; i < unique_values.length; i++)\r\n        rows.push((\r\n            <FrequencyTableRow\r\n                key={i}\r\n                value={unique_values[i]}\r\n                freq={absolute_freq[i]}\r\n            />\r\n        ))\r\n\r\n    return <>{rows}</>\r\n}\r\n\r\nexport default FrequencyTableRows","import React from 'react'\r\n\r\n// Containers\r\nimport FrequencyTableRows from 'containers/FrequencyTableRows'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\ntype Info = {\r\n    absolute_freq: number[],\r\n    unique_values: number[]\r\n}\r\n\r\nfunction FrequencyTable(props: { info: Info}) {\r\n    return (\r\n        <table className=\"FrequencyTable\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>Value</th>\r\n                    <th>Frequency</th>\r\n                </tr>\r\n                <FrequencyTableRows info={props.info}/>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default FrequencyTable","import React from 'react'\r\nimport { formatValue } from 'utils/ValueFormatter'\r\n\r\nfunction ExtraInfoTableRow(props: { label: string, value: number | number[] }) {\r\n\r\n    const arr = typeof props.value === 'object' ? [...props.value] : []\r\n    const length = arr.length\r\n\r\n    const parsedValue = typeof props.value === 'number'\r\n        ? formatValue(parseFloat(props.value.toFixed(2)))\r\n        : [...props.value].map((v, i) => { \r\n            return String(formatValue(parseFloat(v.toFixed(2)))) + (i !== length - 1 ? (arr[i + 2] ? ', ' : ' & ') : '')\r\n        }).join('')\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.label}</td>\r\n            <td>{parsedValue}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ExtraInfoTableRow","import React from 'react'\r\n\r\n// Components\r\nimport ExtraInfoTableRow from 'components/ExtraInfoTableRow'\r\n\r\ntype RowData = {\r\n    [key: string]: any,\r\n    total_values: number,\r\n    total_amplitude: number,\r\n    amostral_amplitude: number,\r\n    classes: number,\r\n    class_interval: number,\r\n    average: number,\r\n    median: number,\r\n    fashion: number[],\r\n    variance: number,\r\n    standard_deviation: number,\r\n    variation_coefficient: number\r\n}\r\n\r\nfunction ExtraInfoTableRows(props: { info: RowData }) {\r\n\r\n    const rows: JSX.Element[] = []\r\n\r\n    function formatLabel(label: string) {\r\n        const capitalizedLabel =\r\n            label.charAt(0).toLocaleUpperCase() + label.slice(1, label.length)\r\n        let parsedLabel: string[] = []\r\n        capitalizedLabel.split('').forEach((char, index) => {\r\n            if (char !== '_') {\r\n                if (capitalizedLabel.charAt(index - 1) === '_')\r\n                    parsedLabel.push(char.toLocaleUpperCase())\r\n                else parsedLabel.push(char)\r\n            }\r\n            else parsedLabel.push(' ')\r\n        })\r\n        return parsedLabel.join('')\r\n    }\r\n\r\n    const info: { label: string, value: number | number[] }[] = []\r\n    Object.keys(props.info).forEach(key => {\r\n        info.push({ label: formatLabel(key), value: props.info[key] })\r\n    })\r\n\r\n    info.forEach(i => {\r\n        rows.push((\r\n            <ExtraInfoTableRow\r\n                key={info.indexOf(i)}\r\n                label={i.label}\r\n                value={i.value}\r\n            />\r\n        ))\r\n    })\r\n\r\n    return <>{rows}</>\r\n}\r\n\r\nexport default ExtraInfoTableRows","import React from 'react'\r\n\r\n// Containers\r\nimport ExtraInfoTableRows from 'containers/ExtraInfoTableRows'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\ntype Info = {\r\n    total_values: number,\r\n    total_amplitude: number,\r\n    amostral_amplitude: number,\r\n    classes: number,\r\n    class_interval: number,\r\n    average: number, \r\n    median: number,\r\n    fashion: number[],\r\n    variance: number,\r\n    standard_deviation: number,\r\n    variation_coefficient: number\r\n}\r\n\r\nfunction ExtraInfoTable(props: { info: Info }) {\r\n    return (\r\n        <table className=\"ExtraInfoTable\">\r\n            <tbody>\r\n                <ExtraInfoTableRows info={props.info}/>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ExtraInfoTable","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// Components\r\nimport Option from 'components/Option'\r\n\r\n// Containers\r\nimport ResultOptions from 'containers/ResultOptions'\r\nimport MainTable from 'containers/MainTable'\r\nimport DataSetTable from 'containers/DataSetTable'\r\nimport FrequencyTable from 'containers/FrequencyTable'\r\nimport ExtraInfoTable from 'containers/ExtraInfoTable'\r\n\r\n// CSS styles\r\nimport './styles.css'\r\n\r\n// Interfaces\r\nimport GeneratedData from 'containers/Home/GeneratedData/interface'\r\n\r\ntype OptionsConfig = { title: string, content: JSX.Element }[]\r\n\r\nfunction Results(props: any) {\r\n\r\n    const [info, setInfo] = useState<GeneratedData>()\r\n    const [optionsConfig, setOptionsConfig] = useState<OptionsConfig>()\r\n    const [options, setOptions] = useState<JSX.Element[]>()\r\n\r\n    const goBack = useCallback(() => {\r\n        sessionStorage.removeItem('generatedInfo')\r\n        props.history.push('/')\r\n    }, []) // eslint-disable-line\r\n\r\n    useEffect(() => {\r\n        if (!sessionStorage.getItem('generatedInfo')) goBack()\r\n        else setInfo(JSON.parse(sessionStorage.getItem('generatedInfo')!))\r\n    }, []) // eslint-disable-line\r\n\r\n    useEffect(() => {\r\n        if (info) {\r\n            const mainTableInfo = {\r\n                classes: info.sturges_k,\r\n                interval: info.intervals,\r\n                xi: info.medium_value,\r\n                fi: info.interval_freq,\r\n                fr: info.relative_freq,\r\n                fac: info.accumulated_freq,\r\n                facr: info.accumulated_relative_freq\r\n            }\r\n\r\n            const dataSetTableInfo = {\r\n                table: info.table,\r\n                lines: info.lines,\r\n                columns: info.columns\r\n            }\r\n\r\n            const frequencyTableInfo = {\r\n                absolute_freq: info.absolute_freq,\r\n                unique_values: info.unique_values\r\n            }\r\n\r\n            const extraInfoTableInfo = {\r\n                total_values: info.total_values,\r\n                total_amplitude: info.total_amplitude,\r\n                amostral_amplitude: info.amostral_amplitude,\r\n                classes: info.sturges_k,\r\n                class_interval: info.class_interval,\r\n                average: info.average,\r\n                median: info.median,\r\n                fashion: info.fashion,\r\n                variance: info.variance,\r\n                standard_deviation: info.standard_deviation,\r\n                variation_coefficient: info.variation_coefficient\r\n            }\r\n\r\n            setOptionsConfig([\r\n                { title: 'Generated Table', content: <MainTable info={mainTableInfo} /> },\r\n                { title: 'Data Set', content: <DataSetTable info={dataSetTableInfo}/> },\r\n                { title: 'Absolute Frequency', content: <FrequencyTable info={frequencyTableInfo}/> },\r\n                { title: 'Extra Information', content: <ExtraInfoTable info={extraInfoTableInfo}/> }\r\n            ])\r\n        }\r\n    }, [info])\r\n\r\n    useEffect(() => {\r\n        if (optionsConfig) {\r\n            const initOptions: JSX.Element[] = []\r\n            optionsConfig.forEach(option => {\r\n                initOptions.push((\r\n                    <Option\r\n                        title={option.title}\r\n                        content={option.content}\r\n                        returnToMenu={goBack}\r\n                    />\r\n                ))\r\n            })\r\n            setOptions(initOptions)\r\n        }\r\n    }, [optionsConfig]) // eslint-disable-line\r\n\r\n    return (\r\n        <div className=\"Results\">\r\n            <ResultOptions history={props.history} />\r\n            <div className=\"ResultScreen\">\r\n                <Switch>\r\n                    <Route path=\"/results/1\" render={() => options && options[0]} />\r\n                    <Route path=\"/results/2\" render={() => options && options[1]} />\r\n                    <Route path=\"/results/3\" render={() => options && options[2]} />\r\n                    <Route path=\"/results/4\" render={() => options && options[3]} />\r\n                    <Redirect to=\"/results/1\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport './App.css'\n\n// Components\nimport Home from './Home'\nimport Results from './Results'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/results\" component={Results}/>\n        <Redirect to=\"/\"/>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from 'containers/App'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}